
import { faker } from "@faker-js/faker";
export default (user,count) => {
    let data = [];
    for (let i = 0; i < count; i++) {
        const fake = {
no: faker.lorem.sentence(1),
invoiceType: faker.lorem.sentence(1),
invoiceDateAndTime: faker.lorem.sentence(1),
originalEInvoiceReferenceNumber: faker.lorem.sentence(1),
suppliersName: faker.lorem.sentence(1),
suppliersTin: faker.lorem.sentence(1),
suppliersSstRegistrationNumber: faker.lorem.sentence(1),
suppliersIdentifierType: faker.lorem.sentence(1),
supplierIdentifierNumber: faker.lorem.sentence(1),
suppliersMsicCode: faker.lorem.sentence(1),
suppliersTourismTaxRegistrationNumber: faker.lorem.sentence(1),
suppliersBusinessActivityDescription: faker.lorem.sentence(1),
suppliersEMail: faker.lorem.sentence(1),
theFirstSuppliersContactNumber: faker.lorem.sentence(1),
suppliersContactNumber: faker.lorem.sentence(1),
supplierCountryName: faker.lorem.sentence(1),
supplierStateName: faker.lorem.sentence(1),
supplierCityName: faker.lorem.sentence(1),
supplierPostalZone: faker.lorem.sentence(1),
buyersName: faker.lorem.sentence(1),
buyersTin: faker.lorem.sentence(1),
buyersSstRegistrationNumber: faker.lorem.sentence(1),
buyerIdentifierType: faker.lorem.sentence(1),
businessRegistrationNumberIdentificationNumberPassportNumber: faker.lorem.sentence(1),
buyersEMail: faker.lorem.sentence(1),
buyersAddressCountryName: faker.lorem.sentence(1),
buyersAddressStateName: faker.lorem.sentence(1),
buyersAddressCityName: faker.lorem.sentence(1),
buyersAddressPostalZone: faker.lorem.sentence(1),
theFirstBuyersContactNumber: faker.lorem.sentence(1),
buyersContactNumber: faker.lorem.sentence(1),
paymentInformationInvoiceCurrency: faker.lorem.sentence(1),
paymentInformationCurrencyExchangeRate: faker.lorem.sentence(1),
paymentInformationFrequencyOfBilling: faker.lorem.sentence(1),
paymentInformationBillingPeriodStartDate: faker.lorem.sentence(1),
paymentInformationBillingPeriodEndDate: faker.lorem.sentence(1),
paymentInformationPaymentMode: faker.lorem.sentence(1),
paymentInformationSuppliersBankAccountNumber: faker.lorem.sentence(1),
paymentInformationPaymentTerms: faker.lorem.sentence(1),
paymentInformationPrePaymentAmount: faker.lorem.sentence(1),
paymentInformationPrePaymentDate: faker.lorem.sentence(1),
paymentInformationPrePaymentReferenceNumber: faker.lorem.sentence(1),
shippingRecipientsName: faker.lorem.sentence(1),
shippingRecipientsAddressCountryName: faker.lorem.sentence(1),
shippingRecipientsAddressStateName: faker.lorem.sentence(1),
shippingRecipientsAddressCityName: faker.lorem.sentence(1),
shippingRecipientsAddressPostalZone: faker.lorem.sentence(1),
shippingRecipientsTin: faker.lorem.sentence(1),
shippingRecipientsIdentifierType: faker.lorem.sentence(1),
shippingRecipientsInformationBusinessRegistrationNumberIdentificationNumberPassportNumber: faker.lorem.sentence(1),
otherInformationBillReferenceNumber: faker.lorem.sentence(1),
otherInformationReferenceNumberOfCustomsFormNo19Etc: faker.lorem.sentence(1),
otherInformationIncoterms: faker.lorem.sentence(1),
otherInformationFreeTradeAgreementFtaInformation: faker.lorem.sentence(1),
otherInformationAuthorisationNumberForCertifiedExporter: faker.lorem.sentence(1),
otherInformationReferenceNumberOfCustomsFormNo2: faker.lorem.sentence(1),
invoiceLineNo: faker.lorem.sentence(1),
invoiceLineClassification: faker.lorem.sentence(1),
invoiceLineProductName: faker.lorem.sentence(1),
invoiceLineQuantity: faker.lorem.sentence(1),
invoiceLineUnitPrice: faker.lorem.sentence(1),
invoiceLineMeasurement: faker.lorem.sentence(1),
invoiceLineSubtotal: faker.lorem.sentence(1),
invoiceLineCountryOfOrigin: faker.lorem.sentence(1),
invoiceLineTotalExcludingTax: faker.lorem.sentence(1),
invoiceLineTaxType: faker.lorem.sentence(1),
invoiceLineTaxRate: faker.lorem.sentence(1),
invoiceLineTaxAmount: faker.lorem.sentence(1),
invoiceLineDetailsOfTaxExemption: faker.lorem.sentence(1),
invoiceLineTaxExemptionAmountExempted: faker.lorem.sentence(1),
invoiceLineDiscountRate: faker.lorem.sentence(1),
discountDetailsOfAmount: faker.lorem.sentence(1),
invoiceLineDetailsOfDiscountDescription: faker.lorem.sentence(1),
invoiceLineDetailsOfChargeFeeChargeRate: faker.lorem.sentence(1),
invoiceLineDetailsOfChargeFeeChargeAmount: faker.lorem.sentence(1),
detailsOfTaxTaxType: faker.lorem.sentence(1),
detailsOfTaxTotalTaxableAmountPerTaxType: faker.lorem.sentence(1),
detailsOfTaxTotalTaxAmountPerTaxType: faker.lorem.sentence(1),
taxExemptionDetailsOfTaxExemption: faker.lorem.sentence(1),
taxExemptionAmountExemptedFromTax: faker.lorem.sentence(1),
discountAdditionalDiscountAmount: faker.lorem.sentence(1),
discountAdditionalDescription: faker.lorem.sentence(1),
feeAmountAdditionalFeeAmount: faker.lorem.sentence(1),
feeAmountAdditionalDescription: faker.lorem.sentence(1),
totalDiscountValue: faker.lorem.sentence(1),
totalFeeChargeAmount: faker.lorem.sentence(1),
totalTaxAmount: faker.lorem.sentence(1),
totalExcludingTax: faker.lorem.sentence(1),
totalNetAmount: faker.lorem.sentence(1),
totalIncludingTax: faker.lorem.sentence(1),
roundingAmount: faker.lorem.sentence(1),
totalPayableAmount: faker.lorem.sentence(1),
invoiceNumber: faker.lorem.sentence(1),
consolidated: faker.lorem.sentence(1),

updatedBy: user._id,
createdBy: user._id
        };
        data = [...data, fake];
    }
    return data;
};
